# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: CI/CD

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  DOTNET_NOLOGO: true
  NuGetDirectory: ${{ github.workspace}}/nuget

on:
  push:
    branches: [ "master" ]
    tags:
    - 'v*.*.*'
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore

  deploy:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    needs: [ build ]

    steps:
    - uses: actions/checkout@v4
    - name: Output
      run: |
        echo "Deploying tag: $GITHUB_REF_NAME"
        VERSION=$(echo $GITHUB_REF_NAME | sed 's/v//')
        echo "Using version: $VERSION"
        echo "GITHUB_VERSION=$VERSION" >> $GITHUB_ENV
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Pack
      run: |
        dotnet pack --configuration Release /property:Version=$GITHUB_VERSION --output ${{ env.NuGetDirectory }}
    - name: Publish NuGet package
      run:  dotnet nuget push "${{ env.NuGetDirectory }}/*.nupkg" --source https://api.nuget.org/v3/index.json --api-key "${{ secrets.NUGET_APIKEY }}"
    - name: Create Github Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ env.GITHUB_VERSION }}
        body: "Visit https://www.nuget.org/packages/b64 to download the latest version.\n\nTo install this release, execute: ```dotnet tool install --global b64 --version ${{ env.GITHUB_VERSION }}```"
        draft: false
        prerelease: false